{
  "ngDeps": {
    "1": "",
    "3": [
      {
        "1": "package:angular2/core.dart",
        "5": false
      },
      {
        "1": "package:angular2/common.dart",
        "5": false
      },
      {
        "1": "dart:async",
        "5": false
      },
      {
        "1": "package:dart_gol/cell.dart",
        "5": false
      },
      {
        "1": "package:dart_gol/rules.dart",
        "5": false
      },
      {
        "1": "package:dart_gol/init_forms.dart",
        "5": false
      }
    ],
    "5": [
      {
        "1": "GridComponent",
        "6": [
          "OnInit"
        ],
        "7": [
          {
            "2": "NgClass"
          }
        ]
      }
    ],
    "6": "grid_component.dart",
    "7": [
      {
        "1": "package:angular2/core.template.dart",
        "4": "i0"
      },
      {
        "1": "package:angular2/common.template.dart",
        "4": "i1"
      },
      {
        "1": "package:dart_gol/cell.template.dart",
        "4": "i2"
      },
      {
        "1": "package:dart_gol/rules.template.dart",
        "4": "i3"
      },
      {
        "1": "package:dart_gol/init_forms.template.dart",
        "4": "i4"
      }
    ]
  },
  "type": {
    "GridComponent": {
      "class": "Directive",
      "isComponent": true,
      "selector": "grid-component",
      "exportAs": null,
      "type": {
        "class": "Type",
        "name": "GridComponent",
        "moduleUrl": "asset:dart_gol/lib/grid_component.dart",
        "prefix": null,
        "isHost": false,
        "value": null,
        "diDeps": []
      },
      "changeDetection": 6,
      "inputs": {},
      "inputTypes": {},
      "outputs": {},
      "hostListeners": {},
      "hostProperties": {},
      "hostAttributes": {},
      "lifecycleHooks": [
        0
      ],
      "template": {
        "encapsulation": 0,
        "template": "<h3 class=\"header\">\n\n    <div class=\"head-1\">\n        <!-- <label>Size:</label> -->\n        <input class=\"grid-size\" [(ngModel)]=\"gridDimension\" type=\"range\"\n        min=\"5\" max=\"100\" step=\"1\" (change)=\"updateGridSize()\" class=\"slider\">\n        <div>\n            <label class=\"large-label grid-adjust\">{{gridDimension}}x{{gridDimension}}</label>\n        </div>\n        <div><label class=\"small-label\">{{cellDimension}} (pixels)</label></div>\n        <input class=\"cell-size\" [(ngModel)]=\"cellDimension\" type=\"range\"\n        min=\"5\" max=\"30\" step=\"1\" (change)=\"updateCellSize()\" class=\"slider\">\n    </div>\n\n    <div class=\"head-2\">\n        <div>\n            <label class=\"large-label\">{{generationsPast}}</label>\n        </div>\n        <div>\n            <label class=\"small-label\">{{livingCells}}</label>\n        </div>\n        <div>\n            <label class=\"small-label\">{{ruleString}}</label>\n        </div>\n        <div class=\"small-label\">Rules:\n            <button (click)=\"buttonRule23_3()\" class=\"btn small-text\">23/3</button>\n            <button (click)=\"buttonRule23_36()\" class=\"btn small-text\">23/36</button>\n        </div>\n    </div>\n\n    <div class=\"head-3\">\n        <!-- <label>Generations to run:</label> -->\n        <input [(ngModel)]=\"generationsToRun\"\n        type=\"range\" min=\"1\" max=\"1000000\" step=\"1\" class=\"slider\">\n        <div class=\"small-label\">{{generationsToRun}}</div>\n        <div class=\"small-label\">{{secondsPerGeneration}}</div>\n        <input [(ngModel)]=\"secondsPerGeneration\"\n        type=\"range\" min=\"0.01\" max=\"30\" step=\".01\" class=\"slider\">\n    </div>\n\n</h3>\n<br>\n<br>\n<div class=\"buttons\">\n    <div>\n        <button (click)=\"buttonRun()\" class=\"btn\">Run</button>\n        <button (click)=\"buttonStop()\" class=\"btn\">Stop</button>\n        <button (click)=\"buttonStep()\" class=\"gradient\">Step >></button>\n        <div class=\"small-label\">\n            Reset as pattern: <button (click)=\"buttonRandom()\" class=\"btn\">Random</button>\n             <button (click)=\"buttonAllAlive()\" class=\"btn\">All Alive</button>\n             <button (click)=\"buttonAllDead()\" class=\"btn\">All Dead</button>\n             <button (click)=\"buttonRandom8()\" class=\"btn\">Random 8</button>\n             <button (click)=\"buttonGlider()\" class=\"btn\">Glider</button>\n             <button (click)=\"buttonRPentomino()\" class=\"btn\">R-Pentomino</button>\n        </div>\n    </div>\n    <br>\n    <div class=\"grid\">\n        <div *ngFor=\"let column of columnsList\" class=\"col-\">\n            <div *ngFor=\"let cell of column\" class=\"cell\"\n            id=\"{{cell.id}}\"\n            [ngClass]=\"{alive: cell.alive}\"\n            [ngStyle]=\"{'width': cellDimensionPx,\n            'height': cellDimensionPx}\"\n            (click)=\"cell.alive = toggleState(cell.alive, cell.id); $event.stopPropagation()\">\n\n            </div>\n        </div>\n    </div>\n</div>\n",
        "templateUrl": "asset:dart_gol/lib/grid_component.html",
        "styles": [],
        "styleUrls": [
          "asset:dart_gol/lib/grid_component.css",
          "asset:dart_gol/lib/header_component.css"
        ],
        "ngContentSelectors": []
      },
      "providers": [],
      "viewProviders": [],
      "queries": [],
      "viewQueries": []
    }
  },
  "alias": {}
}